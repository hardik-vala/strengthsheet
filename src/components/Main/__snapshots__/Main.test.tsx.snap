// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Main appends the text input to a spreadsheet upon submission 1`] = `
[
  <Text>
    Date:
  </Text>,
  <RNDateTimePicker
    date={1693107084083}
    displayIOS="default"
    enabled={true}
    is24Hour={true}
    mode="date"
    onChange={[Function]}
    onPickerDismiss={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    testID="datePicker"
  />,
  <Text>
    Start time:
  </Text>,
  <RNDateTimePicker
    date={1693107084083}
    displayIOS="default"
    enabled={true}
    is24Hour={true}
    mode="time"
    onChange={[Function]}
    onPickerDismiss={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    testID="timePicker"
  />,
  <Text>
    Enter rower workout time:
  </Text>,
  <TextInput
    defaultValue=""
    onChangeText={[Function]}
    placeholder="e.g. 30:00"
    style={
      {
        "borderColor": "gray",
        "borderWidth": 1,
        "height": 40,
        "width": "80%",
      }
    }
    value=""
  />,
  <Text>
    Enter distance:
  </Text>,
  <TextInput
    defaultValue=""
    onChangeText={[Function]}
    placeholder="e.g. 5000m"
    style={
      {
        "borderColor": "gray",
        "borderWidth": 1,
        "height": 40,
        "width": "80%",
      }
    }
    value=""
  />,
  <View
    accessibilityRole="button"
    accessibilityState={
      {
        "busy": undefined,
        "checked": undefined,
        "disabled": undefined,
        "expanded": undefined,
        "selected": undefined,
      }
    }
    accessibilityValue={
      {
        "max": undefined,
        "min": undefined,
        "now": undefined,
        "text": undefined,
      }
    }
    accessible={true}
    collapsable={false}
    focusable={true}
    onClick={[Function]}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    style={
      {
        "opacity": 1,
      }
    }
  >
    <View
      style={
        [
          {},
        ]
      }
    >
      <Text
        style={
          [
            {
              "color": "#007AFF",
              "fontSize": 18,
              "margin": 8,
              "textAlign": "center",
            },
          ]
        }
      >
        Submit
      </Text>
    </View>
  </View>,
  <View
    accessibilityRole="button"
    accessibilityState={
      {
        "busy": undefined,
        "checked": undefined,
        "disabled": undefined,
        "expanded": undefined,
        "selected": undefined,
      }
    }
    accessibilityValue={
      {
        "max": undefined,
        "min": undefined,
        "now": undefined,
        "text": undefined,
      }
    }
    accessible={true}
    collapsable={false}
    focusable={true}
    onClick={[Function]}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    style={
      {
        "opacity": 1,
      }
    }
  >
    <View
      style={
        [
          {},
        ]
      }
    >
      <Text
        style={
          [
            {
              "color": "#007AFF",
              "fontSize": 18,
              "margin": 8,
              "textAlign": "center",
            },
          ]
        }
      >
        Log out
      </Text>
    </View>
  </View>,
]
`;

exports[`Main renders correctly 1`] = `
[
  <Text>
    Date:
  </Text>,
  <RNDateTimePicker
    date={1693107100877}
    displayIOS="default"
    enabled={true}
    is24Hour={true}
    mode="date"
    onChange={[Function]}
    onPickerDismiss={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    testID="datePicker"
  />,
  <Text>
    Start time:
  </Text>,
  <RNDateTimePicker
    date={1693107100877}
    displayIOS="default"
    enabled={true}
    is24Hour={true}
    mode="time"
    onChange={[Function]}
    onPickerDismiss={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    testID="timePicker"
  />,
  <Text>
    Enter rower workout time:
  </Text>,
  <TextInput
    defaultValue=""
    onChangeText={[Function]}
    placeholder="e.g. 30:00"
    style={
      {
        "borderColor": "gray",
        "borderWidth": 1,
        "height": 40,
        "width": "80%",
      }
    }
    value=""
  />,
  <Text>
    Enter distance:
  </Text>,
  <TextInput
    defaultValue=""
    onChangeText={[Function]}
    placeholder="e.g. 5000m"
    style={
      {
        "borderColor": "gray",
        "borderWidth": 1,
        "height": 40,
        "width": "80%",
      }
    }
    value=""
  />,
  <View
    accessibilityRole="button"
    accessibilityState={
      {
        "busy": undefined,
        "checked": undefined,
        "disabled": undefined,
        "expanded": undefined,
        "selected": undefined,
      }
    }
    accessibilityValue={
      {
        "max": undefined,
        "min": undefined,
        "now": undefined,
        "text": undefined,
      }
    }
    accessible={true}
    collapsable={false}
    focusable={true}
    onClick={[Function]}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    style={
      {
        "opacity": 1,
      }
    }
  >
    <View
      style={
        [
          {},
        ]
      }
    >
      <Text
        style={
          [
            {
              "color": "#007AFF",
              "fontSize": 18,
              "margin": 8,
              "textAlign": "center",
            },
          ]
        }
      >
        Submit
      </Text>
    </View>
  </View>,
  <View
    accessibilityRole="button"
    accessibilityState={
      {
        "busy": undefined,
        "checked": undefined,
        "disabled": undefined,
        "expanded": undefined,
        "selected": undefined,
      }
    }
    accessibilityValue={
      {
        "max": undefined,
        "min": undefined,
        "now": undefined,
        "text": undefined,
      }
    }
    accessible={true}
    collapsable={false}
    focusable={true}
    onClick={[Function]}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    style={
      {
        "opacity": 1,
      }
    }
  >
    <View
      style={
        [
          {},
        ]
      }
    >
      <Text
        style={
          [
            {
              "color": "#007AFF",
              "fontSize": 18,
              "margin": 8,
              "textAlign": "center",
            },
          ]
        }
      >
        Log out
      </Text>
    </View>
  </View>,
]
`;
